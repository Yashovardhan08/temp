{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n  return function (source) {\n    return source.lift(new DistinctOperator(keySelector, flushes));\n  };\n}\nvar DistinctOperator = /*@__PURE__*/function () {\n  function DistinctOperator(keySelector, flushes) {\n    this.keySelector = keySelector;\n    this.flushes = flushes;\n  }\n  DistinctOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  };\n  return DistinctOperator;\n}();\nvar DistinctSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DistinctSubscriber, _super);\n  function DistinctSubscriber(destination, keySelector, flushes) {\n    var _this = _super.call(this, destination) || this;\n    _this.keySelector = keySelector;\n    _this.values = new Set();\n    if (flushes) {\n      _this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(_this)));\n    }\n    return _this;\n  }\n  DistinctSubscriber.prototype.notifyNext = function () {\n    this.values.clear();\n  };\n  DistinctSubscriber.prototype.notifyError = function (error) {\n    this._error(error);\n  };\n  DistinctSubscriber.prototype._next = function (value) {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  };\n  DistinctSubscriber.prototype._useKeySelector = function (value) {\n    var key;\n    var destination = this.destination;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  };\n  DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n    var values = this.values;\n    if (!values.has(key)) {\n      values.add(key);\n      this.destination.next(value);\n    }\n  };\n  return DistinctSubscriber;\n}(SimpleOuterSubscriber);\nexport { DistinctSubscriber };","map":{"version":3,"mappings":";AAIA,OAAO,KAAEA,oBAAuB;AA4DhC,SAAMC,qBAAyB,gBACyB;OACtD,SAAOC,QAAC,YAA0B,SAAO;EAC1C;IAAA;EAAA;AAED;IACEC,gCAAoB,YAAgE;WAAhEA,4BAA6B;IAAU,8BAAyB;IACnF;EAED;kBACS,CAAMC,SAAC,CAASC,IAAC,GAAI,oBAAmB,QAAU,EAAE;IAC5D;EACH;EAPA,OAOCF;AAOD;IAA8CG,4CAA2BC;EAGvEP,oCAAY,QAAoC;WAAhDM,kBACE,YAAM,aAAY,SAKnB;IAN+C,kBAAW,KAAX,kBAA6B;IAFrEE,iBAAS,GAAIC,WAAS;IAK5BD,KAAI,OAAO,GAAE;QACXE,OAAK,EAAG;MACTF;;IACF;EAED;oBACc,UAAQ;IACrB;EAED;oBACc,UAAO;IACpB;EAES;oBACC,UAAa;QACpB,IAAI,CAACC;MACN;WACC;MACD;IACF;EAEO;oBACK;IACH;IACR,IAAIE;QACF;MACDC;IAAC,SACAC;MACAF,WAAO;MACR;IACD;IACD;EAEO;oBACE,UAAM,CAAUG;IACxB,IAAIC,MAAC,GAAO,IAAO,OAAM;QACvB,OAAO,IAAO,IAAI,CAAC;MACnBA,MAAK;MACN;IACF;EAEH;EA/C8C,yBA+C7C","names":["tslib_1","SimpleOuterSubscriber","distinct","DistinctOperator","prototype","call","DistinctSubscriber","_super","_this","keySelector","flushes","destination","key","err","_finalizeNext","values"],"sources":["../../../src/internal/operators/distinct.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}