{"ast":null,"code":"/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/function () {\n  function Observable(subscribe) {\n    this._isScalar = false;\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n  Observable.prototype.lift = function (operator) {\n    var observable = new Observable();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  };\n  Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n    var operator = this.operator;\n    var sink = toSubscriber(observerOrNext, error, complete);\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(this.source || config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n    return sink;\n  };\n  Observable.prototype._trySubscribe = function (sink) {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  };\n  Observable.prototype.forEach = function (next, promiseCtor) {\n    var _this = this;\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var subscription;\n      subscription = _this.subscribe(function (value) {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    });\n  };\n  Observable.prototype._subscribe = function (subscriber) {\n    var source = this.source;\n    return source && source.subscribe(subscriber);\n  };\n  Observable.prototype[Symbol_observable] = function () {\n    return this;\n  };\n  Observable.prototype.pipe = function () {\n    var operations = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      operations[_i] = arguments[_i];\n    }\n    if (operations.length === 0) {\n      return this;\n    }\n    return pipeFromArray(operations)(this);\n  };\n  Observable.prototype.toPromise = function (promiseCtor) {\n    var _this = this;\n    promiseCtor = getPromiseCtor(promiseCtor);\n    return new promiseCtor(function (resolve, reject) {\n      var value;\n      _this.subscribe(function (x) {\n        return value = x;\n      }, function (err) {\n        return reject(err);\n      }, function () {\n        return resolve(value);\n      });\n    });\n  };\n  Observable.create = function (subscribe) {\n    return new Observable(subscribe);\n  };\n  return Observable;\n}();\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n  return promiseCtor;\n}","map":{"version":3,"mappings":"AAIA;AACA,SAASA,cAAc,QAAM,uBAAsB;AAGnD,SAASC,YAAU,QAAI,qBAAyB;AAChD,SAASC,cAAaC,iBAAQ,QAAc;AAC5C,SAASC,aAAQ,QAAM,aAAW;AAQlC;IAkBEC,0BAAY,YAA6E;WAflFA,UAAS,UAAkB;IAgBhC,IAAI,UAAS,GAAE;QACbC,SAAK;MACN;IACF;EAyBD;YACQ,UAAU,CAAGC,IAAI,aAAgBC;IACvC,cAAW,GAAM,IAAGH,UAAK;IACzBH,UAAU,CAACO,SAAQ,IAAG;IACtBP,UAAO,SAAW;IACnB;EAuID;YAIU,uBAAkB;IAC1B,IAAMM,QAAO,gBAAa;IAE1B,IAAIE,mBAAU;QACZF,QAAQ,EAAC;MACVE;WACC;UAEE,IAAI,CAAC,WAAW,IAAKC,MAAE,qEACvB,IAAI,CAACC,eAAc,IAEtB;IAED;QACED,MAAI,sCAAyB;UAC3BD,IAAI,CAACG,kBAAkB;QACvBH,IAAI,mBAAK,GAAiB;YACxBA,oBAAW;UACZ;QACF;MACF;IAED;IACD;EAGD;YACM;QACF;MACD;IAAC,SACAI,GAAI;UACFH,MAAK,sCAAuB;QAC5BD,IAAI,CAACK,eAAc,GAAG,IAAI;QAC3BL;MACD;UACEV,cAAc,CAACU,IAAC;QACjBA;aACC;QACDM;MACF;IACF;EASD;YAAA,WAkBCC;IAjBC,YAAW,IAAG;IAEdC,WAAW,iBAAkB,YAAQ;WAGnC,IAAIA,WAA2B;MAC/B,gBAAe;kBACT;YACF;UACDC;QAAC,SACAL,GAAM,EAAC;UACPM,MAAI;cACFC,YAAY,EAAC;YACdA;UACF;QACA;MACe;IACrB;EAGD;YACU,qBAAgB;IACxB,UAAO,GAAM,IAAI,OAAO;IACzB;EAoBD;YACE,CAAOC,SAAK;IACb;EAoCD;YAAK,eAA2C;kBAA3C;SAAA,iCAA2C;;IAC9C;QACEC,UAAO,CAAWC,MAAC;MACpB;IAED;IACD;EAQD;YAAA,WAOCC;IANC,YAAW,IAAG;IAEdP,WAAW,iBAAY,YAAQ;WAC7B,IAAIA,WAAW;MACf,SAAK;MACUQ;QAAA;MAAA;QAAA;MAAA;QAAA;MAAA;IAClB;EAnTM;YACL,CAAOC,MAAI,aAAcrB,SAAW;IACrC;EAkTH;EAxVA,OAwVCD;;AASD,SAASA;SACFuB,cAAa;MAChB,YAAW,EAAG;IACfV;EAED;MACE,YAAU;IACX;EAED;EACD","names":["canReportError","toSubscriber","observable","Symbol_observable","pipeFromArray","Observable","subscribe","lift","operator","source","sink","config","_subscribe","syncErrorThrowable","err","syncErrorThrown","console","forEach","promiseCtor","next","reject","subscription","prototype","operations","length","toPromise","_this","create","getPromiseCtor"],"sources":["../../src/internal/Observable.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}