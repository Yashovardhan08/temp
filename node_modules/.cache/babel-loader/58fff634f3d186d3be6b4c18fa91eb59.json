{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLink = void 0;\nconst url_1 = __importDefault(require(\"url\"));\nconst ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\nconst WalletLinkProvider_1 = require(\"./provider/WalletLinkProvider\");\nconst WalletLinkSdkUI_1 = require(\"./provider/WalletLinkSdkUI\");\nconst WalletLinkRelay_1 = require(\"./relay/WalletLinkRelay\");\nconst WalletLinkRelayEventManager_1 = require(\"./relay/WalletLinkRelayEventManager\");\nconst util_1 = require(\"./util\");\nconst WALLETLINK_URL = process.env.WALLETLINK_URL || \"https://www.walletlink.org\";\nconst WALLETLINK_VERSION = process.env.WALLETLINK_VERSION || require(\"../package.json\").version || \"unknown\";\nclass WalletLink {\n  /**\n   * Constructor\n   * @param options WalletLink options object\n   */\n  constructor(options) {\n    this._appName = \"\";\n    this._appLogoUrl = null;\n    this._relay = null;\n    this._relayEventManager = null;\n    let walletLinkUrl = options.walletLinkUrl || WALLETLINK_URL;\n    let walletLinkUIConstructor;\n    if (!options.walletLinkUIConstructor) {\n      walletLinkUIConstructor = options => new WalletLinkSdkUI_1.WalletLinkSdkUI(options);\n    } else {\n      walletLinkUIConstructor = options.walletLinkUIConstructor;\n    }\n    if (typeof options.overrideIsMetaMask === \"undefined\") {\n      this._overrideIsMetaMask = false;\n    } else {\n      this._overrideIsMetaMask = options.overrideIsMetaMask;\n    }\n    const u = url_1.default.parse(walletLinkUrl);\n    const walletLinkOrigin = `${u.protocol}//${u.host}`;\n    this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(`-walletlink:${walletLinkOrigin}`);\n    this._storage.setItem(\"version\", WalletLink.VERSION);\n    if (typeof window.walletLinkExtension !== \"undefined\") {\n      return;\n    }\n    this._relayEventManager = new WalletLinkRelayEventManager_1.WalletLinkRelayEventManager();\n    this._relay = new WalletLinkRelay_1.WalletLinkRelay({\n      walletLinkUrl: walletLinkUrl,\n      version: WALLETLINK_VERSION,\n      darkMode: !!options.darkMode,\n      walletLinkUIConstructor: walletLinkUIConstructor,\n      storage: this._storage,\n      relayEventManager: this._relayEventManager\n    });\n    this.setAppInfo(options.appName, options.appLogoUrl);\n    this._relay.attachUI();\n  }\n  /**\n   * Create a Web3 Provider object\n   * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n   * @param chainId Ethereum Chain ID (Default: 1)\n   * @returns A Web3 Provider\n   */\n  makeWeb3Provider() {\n    let jsonRpcUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let chainId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    if (typeof window.walletLinkExtension !== \"undefined\") {\n      if (\n      //@ts-ignore\n      typeof window.walletLinkExtension.isCipher !== \"boolean\" ||\n      //@ts-ignore\n      !window.walletLinkExtension.isCipher) {\n        //@ts-ignore\n        window.walletLinkExtension.setProviderInfo(jsonRpcUrl, chainId);\n      }\n      return window.walletLinkExtension;\n    }\n    const relay = this._relay;\n    if (!relay || !this._relayEventManager || !this._storage) {\n      throw new Error(\"Relay not initialized, should never happen\");\n    }\n    if (!jsonRpcUrl) relay.setConnectDisabled(true);\n    return new WalletLinkProvider_1.WalletLinkProvider({\n      relayProvider: () => Promise.resolve(relay),\n      relayEventManager: this._relayEventManager,\n      storage: this._storage,\n      jsonRpcUrl,\n      chainId,\n      overrideIsMetaMask: this._overrideIsMetaMask\n    });\n  }\n  /**\n   * Set application information\n   * @param appName Application name\n   * @param appLogoUrl Application logo image URL\n   */\n  setAppInfo(appName, appLogoUrl) {\n    var _a;\n    this._appName = appName || \"DApp\";\n    this._appLogoUrl = appLogoUrl || util_1.getFavicon();\n    if (typeof window.walletLinkExtension !== \"undefined\") {\n      if (\n      //@ts-ignore\n      typeof window.walletLinkExtension.isCipher !== \"boolean\" ||\n      //@ts-ignore\n      !window.walletLinkExtension.isCipher) {\n        //@ts-ignore\n        window.walletLinkExtension.setAppInfo(this._appName, this._appLogoUrl);\n      }\n    } else {\n      (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n    }\n  }\n  /**\n   * Disconnect. After disconnecting, this will reload the web page to ensure\n   * all potential stale state is cleared.\n   */\n  disconnect() {\n    var _a;\n    if (typeof window.walletLinkExtension !== \"undefined\") {\n      window.walletLinkExtension.close();\n    } else {\n      (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n    }\n  }\n}\nexports.WalletLink = WalletLink;\n/**\n * WalletLink version\n */\nWalletLink.VERSION = WALLETLINK_VERSION;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","WalletLink","url_1","require","ScopedLocalStorage_1","WalletLinkProvider_1","WalletLinkSdkUI_1","WalletLinkRelay_1","WalletLinkRelayEventManager_1","util_1","WALLETLINK_URL","process","env","WALLETLINK_VERSION","version","constructor","options","_appName","_appLogoUrl","_relay","_relayEventManager","walletLinkUrl","walletLinkUIConstructor","WalletLinkSdkUI","overrideIsMetaMask","_overrideIsMetaMask","u","default","parse","walletLinkOrigin","protocol","host","_storage","ScopedLocalStorage","setItem","VERSION","window","walletLinkExtension","WalletLinkRelayEventManager","WalletLinkRelay","darkMode","storage","relayEventManager","setAppInfo","appName","appLogoUrl","attachUI","makeWeb3Provider","jsonRpcUrl","chainId","isCipher","setProviderInfo","relay","Error","setConnectDisabled","WalletLinkProvider","relayProvider","Promise","resolve","_a","getFavicon","disconnect","close","resetAndReload"],"sources":["/Users/radioactivedevil08/Polygon/starter-kits/node_modules/walletlink/dist/WalletLink.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLink = void 0;\nconst url_1 = __importDefault(require(\"url\"));\nconst ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\nconst WalletLinkProvider_1 = require(\"./provider/WalletLinkProvider\");\nconst WalletLinkSdkUI_1 = require(\"./provider/WalletLinkSdkUI\");\nconst WalletLinkRelay_1 = require(\"./relay/WalletLinkRelay\");\nconst WalletLinkRelayEventManager_1 = require(\"./relay/WalletLinkRelayEventManager\");\nconst util_1 = require(\"./util\");\nconst WALLETLINK_URL = process.env.WALLETLINK_URL || \"https://www.walletlink.org\";\nconst WALLETLINK_VERSION = process.env.WALLETLINK_VERSION ||\n    require(\"../package.json\").version ||\n    \"unknown\";\nclass WalletLink {\n    /**\n     * Constructor\n     * @param options WalletLink options object\n     */\n    constructor(options) {\n        this._appName = \"\";\n        this._appLogoUrl = null;\n        this._relay = null;\n        this._relayEventManager = null;\n        let walletLinkUrl = options.walletLinkUrl || WALLETLINK_URL;\n        let walletLinkUIConstructor;\n        if (!options.walletLinkUIConstructor) {\n            walletLinkUIConstructor = options => new WalletLinkSdkUI_1.WalletLinkSdkUI(options);\n        }\n        else {\n            walletLinkUIConstructor = options.walletLinkUIConstructor;\n        }\n        if (typeof options.overrideIsMetaMask === \"undefined\") {\n            this._overrideIsMetaMask = false;\n        }\n        else {\n            this._overrideIsMetaMask = options.overrideIsMetaMask;\n        }\n        const u = url_1.default.parse(walletLinkUrl);\n        const walletLinkOrigin = `${u.protocol}//${u.host}`;\n        this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(`-walletlink:${walletLinkOrigin}`);\n        this._storage.setItem(\"version\", WalletLink.VERSION);\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            return;\n        }\n        this._relayEventManager = new WalletLinkRelayEventManager_1.WalletLinkRelayEventManager();\n        this._relay = new WalletLinkRelay_1.WalletLinkRelay({\n            walletLinkUrl: walletLinkUrl,\n            version: WALLETLINK_VERSION,\n            darkMode: !!options.darkMode,\n            walletLinkUIConstructor: walletLinkUIConstructor,\n            storage: this._storage,\n            relayEventManager: this._relayEventManager\n        });\n        this.setAppInfo(options.appName, options.appLogoUrl);\n        this._relay.attachUI();\n    }\n    /**\n     * Create a Web3 Provider object\n     * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n     * @param chainId Ethereum Chain ID (Default: 1)\n     * @returns A Web3 Provider\n     */\n    makeWeb3Provider(jsonRpcUrl = \"\", chainId = 1) {\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            if (\n            //@ts-ignore\n            typeof window.walletLinkExtension.isCipher !== \"boolean\" ||\n                //@ts-ignore\n                !window.walletLinkExtension.isCipher) {\n                //@ts-ignore\n                window.walletLinkExtension.setProviderInfo(jsonRpcUrl, chainId);\n            }\n            return window.walletLinkExtension;\n        }\n        const relay = this._relay;\n        if (!relay || !this._relayEventManager || !this._storage) {\n            throw new Error(\"Relay not initialized, should never happen\");\n        }\n        if (!jsonRpcUrl)\n            relay.setConnectDisabled(true);\n        return new WalletLinkProvider_1.WalletLinkProvider({\n            relayProvider: () => Promise.resolve(relay),\n            relayEventManager: this._relayEventManager,\n            storage: this._storage,\n            jsonRpcUrl,\n            chainId,\n            overrideIsMetaMask: this._overrideIsMetaMask\n        });\n    }\n    /**\n     * Set application information\n     * @param appName Application name\n     * @param appLogoUrl Application logo image URL\n     */\n    setAppInfo(appName, appLogoUrl) {\n        var _a;\n        this._appName = appName || \"DApp\";\n        this._appLogoUrl = appLogoUrl || util_1.getFavicon();\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            if (\n            //@ts-ignore\n            typeof window.walletLinkExtension.isCipher !== \"boolean\" ||\n                //@ts-ignore\n                !window.walletLinkExtension.isCipher) {\n                //@ts-ignore\n                window.walletLinkExtension.setAppInfo(this._appName, this._appLogoUrl);\n            }\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n        }\n    }\n    /**\n     * Disconnect. After disconnecting, this will reload the web page to ensure\n     * all potential stale state is cleared.\n     */\n    disconnect() {\n        var _a;\n        if (typeof window.walletLinkExtension !== \"undefined\") {\n            window.walletLinkExtension.close();\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n        }\n    }\n}\nexports.WalletLink = WalletLink;\n/**\n * WalletLink version\n */\nWalletLink.VERSION = WALLETLINK_VERSION;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}