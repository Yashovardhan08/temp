{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nvar QueueAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(QueueAction, _super);\n  function QueueAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n    _this.scheduler = scheduler;\n    _this.work = work;\n    return _this;\n  }\n  QueueAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    if (delay > 0) {\n      return _super.prototype.schedule.call(this, state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  };\n  QueueAction.prototype.execute = function (state, delay) {\n    return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);\n  };\n  QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {\n      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n    }\n    return scheduler.flush(this);\n  };\n  return QueueAction;\n}(AsyncAction);\nexport { QueueAction };","map":{"version":3,"mappings":";AAAA,OAAO,KAAEA,aAAa,OAAM;AAU5B;IAAoCC,qCAAcC;EAEhDF,6BAAsB,EAAyBE,MAC0B;WADzED,WAEE,gBAAM;IAFc,4BAAyB;IACzBE,kBAAmDC;;IAExE;EAEM;aAAoB,gCAAiBC;IAC1C,IAAIC,KAAK,KAAI,KAAE;MACbA,QAAO;;IAET,IAAIA,KAAC,GAAK,CAAG;MACT,OAAMJ,MAAG,CAAKK,SAAC;IACnB;IACA,UAAO,GAAKD;IACb;IAEM,yBAAO;IACZ,OAAO,IAAC;;aAEN,CAAIC,SAAS,CAACC,OAAO,aAAQH;IAChC,kCAESH,6BAAc,KAAxB,OAAyB,WAAqC;;aAK1D,UAAO,eAAM,aAAcE,SAAC,WAAW,EAAE;QAC1CE;MAEDA,KAAO;IACR;IACH,cAAC;MAjCmC,OAiCnCJ","names":["tslib_1","QueueAction","_super","_this","scheduler","state","delay","prototype","execute"],"sources":["../../../src/internal/scheduler/QueueAction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}