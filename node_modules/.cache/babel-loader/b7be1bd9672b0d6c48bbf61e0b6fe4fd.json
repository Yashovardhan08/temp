{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n  return function mapOperation(source) {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\nvar MapOperator = /*@__PURE__*/function () {\n  function MapOperator(project, thisArg) {\n    this.project = project;\n    this.thisArg = thisArg;\n  }\n  MapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  };\n  return MapOperator;\n}();\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(MapSubscriber, _super);\n  function MapSubscriber(destination, project, thisArg) {\n    var _this = _super.call(this, destination) || this;\n    _this.project = project;\n    _this.count = 0;\n    _this.thisArg = thisArg || _this;\n    return _this;\n  }\n  MapSubscriber.prototype._next = function (value) {\n    var result;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  };\n  return MapSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AACA,OAAO,KAAEA,OAAU,MAAE,OAAM;AA2C3B,SAAMC,UAAa,QAA8C,eAAe;OAC9E,SAAOC,IAASC,gBAAa;SAC3B,SAAWC,YAAY,SAAU;QAC/B,OAAMD,OAAI,KAAS,UAAC;MACrB;IACD;IACA;EACH;AAED;IACEE,2BAA2D,YAAsB;WAA7DA,mBAAuC;IAAU,YAAO,GAAPF,OAAO;IAC3E;EAED;aACS,UAAO,QAAU,UAAIG,UAAc,QAAU,EAAE;IACvD;EACH;EAPA,OAOCD;;AAOD;IAAkCE,uCAAaC;EAI7CR,+BAAY,QACQ;WADpBO,aAGE,YAAM,WAAWE,OAAC;IAFA,uBAAO,CAAgC;IAJ3DC,aAAK,GAAaP;IAOhBO,KAAI,CAACC,QAAO;;IACb;EAIS;eACJ,CAASC,SAAC;IACd,IAAIC;QACF;MACDA;IAAC,SACAC,GAAK;MACL,gBAAO;MACR;IACD;IACD;EACH;EAvBkC,oBAuBjC","names":["tslib_1","Subscriber","map","project","mapOperation","MapOperator","subscriber","MapSubscriber","_super","thisArg","_this","count","prototype","result","err"],"sources":["../../../src/internal/operators/map.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}