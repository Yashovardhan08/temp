{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport var defaultThrottleConfig = {\n  leading: true,\n  trailing: false\n};\nexport function throttle(durationSelector, config) {\n  if (config === void 0) {\n    config = defaultThrottleConfig;\n  }\n  return function (source) {\n    return source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n  };\n}\nvar ThrottleOperator = /*@__PURE__*/function () {\n  function ThrottleOperator(durationSelector, leading, trailing) {\n    this.durationSelector = durationSelector;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n  ThrottleOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n  };\n  return ThrottleOperator;\n}();\nvar ThrottleSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ThrottleSubscriber, _super);\n  function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n    var _this = _super.call(this, destination) || this;\n    _this.destination = destination;\n    _this.durationSelector = durationSelector;\n    _this._leading = _leading;\n    _this._trailing = _trailing;\n    _this._hasValue = false;\n    return _this;\n  }\n  ThrottleSubscriber.prototype._next = function (value) {\n    this._hasValue = true;\n    this._sendValue = value;\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  };\n  ThrottleSubscriber.prototype.send = function () {\n    var _a = this,\n      _hasValue = _a._hasValue,\n      _sendValue = _a._sendValue;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue);\n    }\n    this._hasValue = false;\n    this._sendValue = undefined;\n  };\n  ThrottleSubscriber.prototype.throttle = function (value) {\n    var duration = this.tryDurationSelector(value);\n    if (!!duration) {\n      this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n    }\n  };\n  ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  };\n  ThrottleSubscriber.prototype.throttlingDone = function () {\n    var _a = this,\n      _throttled = _a._throttled,\n      _trailing = _a._trailing;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = undefined;\n    if (_trailing) {\n      this.send();\n    }\n  };\n  ThrottleSubscriber.prototype.notifyNext = function () {\n    this.throttlingDone();\n  };\n  ThrottleSubscriber.prototype.notifyComplete = function () {\n    this.throttlingDone();\n  };\n  return ThrottleSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":";AAMA,OAAO,KAAEA,oBAAuB;AAOhC,SAAOC,qBAAM,EAAqBC,cAAmB;OACnD,IAAOC,qBAAM;EACbC,SAAQ,IAAE;EACVC;AAgDF;OAC4B;EAC1B,UAAO,UAAC,GAAqB;IAC9BC;EAED;EACE;IAAoB,kBACA,qBACiB;EAAA;;oBADV,GAAP,aAAgB;WAChBC,iCAAiB;IACpC;IAED;IACE,aAAa,GAACF,QACZ;EAEJ;EACFE,0BAAC;IAAA;EAOD;EAAuC;GAKrC;sBAIE,gBAAM,UAAYC;SAJE,6BAA0B;WAC5BC,kBAAgB,YAAhB,kBAA6D;IAC7D,4BAAiB;IACjBC,iBAAS,GAATC,WAAkB;IAL9BD,sBAAY,GAAME;;IAOzBF;IAESA;IACR,OAAKA;;oBAGK,UAAY;QACpB,UAAS,OAAQ;mBACV,GAAIG,KAAG;SACb;cAAM;QACL,IAAI,CAACC;OACN,MACF;QACF;MAEO;IACA;;oBAEC,UAAY,CAAIA,IAAC,eAAY;QAClCC,KAAK;MAAAC,SAAS,KAAY,CAACA;MAAAC;QAC5BD;MACG,IAAC,YAAY,KAAM;MACnB,IAAC,SAAU,CAAGC,UAAU;IAC7B;IAEO;IACN,IAAM,WAAW,YAAK;;oBAEX,UAAK,SAAa,aAAeJ;QAC3CK;IACF;MAEO,yCAAmB,SAA3B,MAA4BC,qBAAQ;IAClC;;oBAEC;IAAC;MACA,OAAK,qBAAuB;aAE7BC;MACF;MAEO;IACA;;oBAEM,CAACC,wBAAc;QAC1BN;MAAAO;MAAAC;IACD,IAAID,UAAC,EAAU;MAEXA,UAAS,CAAEE;;QAEd;IACF;MAED;IACE;EACF,CAAC;EAEDf;IACE,IAAI,CAACgB,cAAc,EAAE;EACvB,CAAC;EACHhB,4BAAC;IAtEsC,mBAsEtC","names":["tslib_1","SimpleOuterSubscriber","innerSubscribe","defaultThrottleConfig","leading","trailing","config","ThrottleOperator","_super","ThrottleSubscriber","_this","destination","durationSelector","value","send","_a","_hasValue","_sendValue","duration","SimpleInnerSubscriber","err","prototype","_throttled","_trailing","unsubscribe","throttlingDone"],"sources":["../../../src/internal/operators/throttle.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}