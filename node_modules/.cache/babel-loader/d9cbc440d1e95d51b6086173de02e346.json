{"ast":null,"code":"/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function range(start, count, scheduler) {\n  if (start === void 0) {\n    start = 0;\n  }\n  return new Observable(function (subscriber) {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n    var index = 0;\n    var current = start;\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index: index,\n        count: count,\n        start: start,\n        subscriber: subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n    return undefined;\n  });\n}\nexport function dispatch(state) {\n  var start = state.start,\n    index = state.index,\n    count = state.count,\n    subscriber = state.subscriber;\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n  subscriber.next(start);\n  if (subscriber.closed) {\n    return;\n  }\n  state.index = index + 1;\n  state.start = start + 1;\n  this.schedule(state);\n}","map":{"version":3,"mappings":"AACA;AAoCA,SAAMA,UAAU,QAAuB,eAEjB;OAFA,sCAAiB;EAGrC,SAAO,KAAI,QAAmB;IAC5BC,KAAI,IAAK;;aAEPD,UAAU;QACXE;MAEGA,KAAK,GAAGD,KAAE;MACVA,QAAO;IAEX;QACEE,QAAO;eACL,GAAKF;iBACJ;MACJ;QAAME;QAAAD;QAAAD;QAAAG;MACL;;;YAIGD;UACDC,UAAW,CAAIC,QAAQ,EAAE;UACrB;;kBAEH;QACF,cAAc;UAChB;QAEM;MACN;IACJ;IAGK,gBAAkB;EACd;;gBAGNC,QAAW,MAAW;MACtBL,QAAOM;IAAAJ;IAAAD;IAAAE;MACRD;IAEDC,UAAW,CAAIC,QAAQ;IAEnB;;YAEH;EAED,cAAc,OAAK,EAAI;IACvB;EAEA;EACDE","names":["Observable","start","count","index","subscriber","complete","dispatch","state"],"sources":["../../../src/internal/observable/range.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}