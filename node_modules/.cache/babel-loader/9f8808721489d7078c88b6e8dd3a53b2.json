{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nvar toString = /*@__PURE__*/function () {\n  return Object.prototype.toString;\n}();\nexport function fromEvent(target, eventName, options, resultSelector) {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent(target, eventName, options).pipe(map(function (args) {\n      return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n    }));\n  }\n  return new Observable(function (subscriber) {\n    function handler(e) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options);\n  });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n  var unsubscribe;\n  if (isEventTarget(sourceObj)) {\n    var source_1 = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = function () {\n      return source_1.removeEventListener(eventName, handler, options);\n    };\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    var source_2 = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = function () {\n      return source_2.off(eventName, handler);\n    };\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    var source_3 = sourceObj;\n    sourceObj.addListener(eventName, handler);\n    unsubscribe = function () {\n      return source_3.removeListener(eventName, handler);\n    };\n  } else if (sourceObj && sourceObj.length) {\n    for (var i = 0, len = sourceObj.length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n  subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,UAAS,QAAM,eAAkB;AAC1C,SAASC,eAAY,iBAAM;AAE3B,SAASC,UAAK,QAAM,oBAAmB;AAEvC,SAAMC,GAAQ,QAAc,kBAAM;AA0KlC,YAAM,gBACJ,YACA;EAAiB,OACjBC,MACA,WAAwCC;AAAA;OAGxC,SAAIC,SAAW,CAAOC,MAAG;MAEvBL,kBAAiB;IACjBM,cAAU,UAAU;IACrBC;EACD;MAEED,cAAO,EAAS;IAGjB;MAAA;IAAA;EAED;SACE,cAAiB,CAAI;aACfE,QAASC,CAAC;UACZC,UAAUC,MAAM,MAAM;QACvBC;aACC;QACDA;MACF;IACD;IACCC;EACJ;AAED;SAGMA,iBAAwB;EAC5B,IAAIC;MACFC,aAAY,UAAG,CAAS,EAAC;IACzB,YAAU;IACVC,0BAAc,UAAM,SAAO;IAC5BF;MAAA;IAAA;SACC,IAAMG,yBAAmB;IACzB,YAAY,GAACD,SAAW;IACxBA,YAAW,UAAG,SAAM;IACrBF;MAAA;IAAA;SACC,IAAMI,uBAAmB;IACzB,YAAU,YAAY;IACtBF,qBAAc,UAAM;IACrBF;MAAA;IAAA;SACC,IAAKE,SAAS,IAAEA,SAAO,OAAkB;SACvC,iBAAkBA,SAAS,CAACL,MAAI,SAAW,OAAO;MACnDE;IACF;SACC;IACD;EAED;EACDD;AAED;SACEM,uBAA2B,UAAU;EACtC;AAED;SACED,yBAA2B,UAAY;EACxC;AAED;SACEF,aAAgB,UAAW;EAC5B","names":["Observable","isArray","isFunction","map","Object","toString","fromEvent","target","resultSelector","options","handler","e","arguments","length","subscriber","setupSubscription","unsubscribe","isEventTarget","sourceObj","isJQueryStyleEventEmitter","isNodeStyleEventEmitter"],"sources":["../../../src/internal/observable/fromEvent.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}