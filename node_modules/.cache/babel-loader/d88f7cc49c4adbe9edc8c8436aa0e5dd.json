{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function find(predicate, thisArg) {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return function (source) {\n    return source.lift(new FindValueOperator(predicate, source, false, thisArg));\n  };\n}\nvar FindValueOperator = /*@__PURE__*/function () {\n  function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n    this.predicate = predicate;\n    this.source = source;\n    this.yieldIndex = yieldIndex;\n    this.thisArg = thisArg;\n  }\n  FindValueOperator.prototype.call = function (observer, source) {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  };\n  return FindValueOperator;\n}();\nexport { FindValueOperator };\nvar FindValueSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(FindValueSubscriber, _super);\n  function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.yieldIndex = yieldIndex;\n    _this.thisArg = thisArg;\n    _this.index = 0;\n    return _this;\n  }\n  FindValueSubscriber.prototype.notifyComplete = function (value) {\n    var destination = this.destination;\n    destination.next(value);\n    destination.complete();\n    this.unsubscribe();\n  };\n  FindValueSubscriber.prototype._next = function (value) {\n    var _a = this,\n      predicate = _a.predicate,\n      thisArg = _a.thisArg;\n    var index = this.index++;\n    try {\n      var result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n  FindValueSubscriber.prototype._complete = function () {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  };\n  return FindValueSubscriber;\n}(Subscriber);\nexport { FindValueSubscriber };","map":{"version":3,"mappings":";AAEA,OAAO,KAACA,OAAU,MAAC,OAAM;AA8CzB,SAAMC,UAAU,QAAQ,eACa;OACnC,SAAWC,cAAc,SAAU,EAAE;MACnC,OAAMC,SAAI,KAAU;IACrB;EACD;EACD;IAAA;EAAA;AAED;IACEC,iCAAoB,YAEA;WAFAA,2BAAsE;IACtE,0BAAqB;IACrB;IACA,4BAAa;IAChC;EAED;mBACe,CAACC,SAAS,CAACC,IAAI,qBAAoB,QAAQ,EAAE;IAC3D;EACH;EAVA,OAUCF;;AAOD;IAA4CG,6CAAaC;EAGvDR,qCAAY,QACQ;WADpBO,mBAKE,YAAM,WAAY,QACnB;IALmB,4BAAsE;IACtEE,2BAAqB;IACrBA;IACAA,6BAAa;IANzBA,aAAK,GAAaC;;IAQzB;EAEO;qBACW,UAAQ,eAAY;IAErC,eAAY,GAAK,IAAK,CAACC,WAAC;IACxBA,WAAW,CAACC,UAAU,CAAC;IACvBD,WAAK,SAAc;IACpB;EAES;qBACD,6BAAWE;IAClB,IAAMC,KAAK,IAAG;MAAAX,SAAY,GAACW;MAAAJ;IAC3B,IAAIK;QACF;MACA,IAAIC,MAAM,GAAEb;UACVa,MAAK;QACN;MACF;IAAC,SACAC,GAAK;MACN;IACF;EAES;qBACH,UAAoB,UAAU,GAAG,YAAK;IAC5C;EACH;EAnC4C,0BAmC3C","names":["tslib_1","Subscriber","find","predicate","FindValueOperator","prototype","call","FindValueSubscriber","_super","_this","thisArg","destination","next","value","_a","index","result","err"],"sources":["../../../src/internal/operators/find.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}