{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { injected } from '../lib/connectors';\nexport function useEagerConnect() {\n  _s();\n  const {\n    activate,\n    active\n  } = useWeb3React();\n  const [tried, setTried] = useState(false);\n  useEffect(() => {\n    injected.isAuthorized().then(isAuthorized => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, [activate]);\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n  return tried;\n}\n_s(useEagerConnect, \"GLh+9ege4oFDiozdAF2n3i5tC+o=\", false, function () {\n  return [useWeb3React];\n});\nexport function useInactiveListener() {\n  _s2();\n  let suppress = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const {\n    active,\n    error,\n    activate\n  } = useWeb3React();\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = chainId => {\n        console.log('chainChanged', chainId);\n        activate(injected);\n      };\n      const handleAccountsChanged = accounts => {\n        console.log('accountsChanged', accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      };\n      const handleNetworkChanged = networkId => {\n        console.log('networkChanged', networkId);\n        activate(injected);\n      };\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      };\n    }\n    return () => {};\n  }, [active, error, suppress, activate]);\n}\n_s2(useInactiveListener, \"tg+LUTCYzAVRTYzC32Q8yta1BMA=\", false, function () {\n  return [useWeb3React];\n});","map":{"version":3,"names":["useState","useEffect","useWeb3React","injected","useEagerConnect","activate","active","tried","setTried","isAuthorized","then","undefined","catch","useInactiveListener","suppress","error","ethereum","window","on","handleChainChanged","chainId","console","log","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener"],"sources":["/Users/radioactivedevil08/Polygon/temp/src/hooks/index.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\n\nimport { injected } from '../lib/connectors';\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, [activate]);\n\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3React();\n\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = (chainId) => {\n        console.log('chainChanged', chainId);\n        activate(injected);\n      };\n\n      const handleAccountsChanged = (accounts) => {\n        console.log('accountsChanged', accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      };\n\n      const handleNetworkChanged = (networkId) => {\n        console.log('networkChanged', networkId);\n        activate(injected);\n      };\n\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      };\n    }\n\n    return () => {};\n  }, [active, error, suppress, activate]);\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,OAAO,SAASC,eAAe,GAAG;EAAA;EAChC,MAAM;IAAEC,QAAQ;IAAEC;EAAO,CAAC,GAAGJ,YAAY,EAAE;EAE3C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACdE,QAAQ,CAACM,YAAY,EAAE,CAACC,IAAI,CAAED,YAAY,IAAK;MAC7C,IAAIA,YAAY,EAAE;QAChBJ,QAAQ,CAACF,QAAQ,EAAEQ,SAAS,EAAE,IAAI,CAAC,CAACC,KAAK,CAAC,MAAM;UAC9CJ,QAAQ,CAAC,IAAI,CAAC;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLA,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEdJ,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,KAAK,IAAID,MAAM,EAAE;MACpBE,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC,EAAE,CAACD,KAAK,EAAED,MAAM,CAAC,CAAC;EAEnB,OAAOC,KAAK;AACd;AAAC,GAxBeH,eAAe;EAAA,QACAF,YAAY;AAAA;AAyB3C,OAAO,SAASW,mBAAmB,GAAmB;EAAA;EAAA,IAAlBC,QAAQ,uEAAG,KAAK;EAClD,MAAM;IAAER,MAAM;IAAES,KAAK;IAAEV;EAAS,CAAC,GAAGH,YAAY,EAAE;EAElDD,SAAS,CAAC,MAAM;IACd,MAAM;MAAEe;IAAS,CAAC,GAAGC,MAAM;IAC3B,IAAID,QAAQ,IAAIA,QAAQ,CAACE,EAAE,IAAI,CAACZ,MAAM,IAAI,CAACS,KAAK,IAAI,CAACD,QAAQ,EAAE;MAC7D,MAAMK,kBAAkB,GAAIC,OAAO,IAAK;QACtCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,OAAO,CAAC;QACpCf,QAAQ,CAACF,QAAQ,CAAC;MACpB,CAAC;MAED,MAAMoB,qBAAqB,GAAIC,QAAQ,IAAK;QAC1CH,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEE,QAAQ,CAAC;QACxC,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;UACvBpB,QAAQ,CAACF,QAAQ,CAAC;QACpB;MACF,CAAC;MAED,MAAMuB,oBAAoB,GAAIC,SAAS,IAAK;QAC1CN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,SAAS,CAAC;QACxCtB,QAAQ,CAACF,QAAQ,CAAC;MACpB,CAAC;MAEDa,QAAQ,CAACE,EAAE,CAAC,cAAc,EAAEC,kBAAkB,CAAC;MAC/CH,QAAQ,CAACE,EAAE,CAAC,iBAAiB,EAAEK,qBAAqB,CAAC;MACrDP,QAAQ,CAACE,EAAE,CAAC,gBAAgB,EAAEQ,oBAAoB,CAAC;MAEnD,OAAO,MAAM;QACX,IAAIV,QAAQ,CAACY,cAAc,EAAE;UAC3BZ,QAAQ,CAACY,cAAc,CAAC,cAAc,EAAET,kBAAkB,CAAC;UAC3DH,QAAQ,CAACY,cAAc,CAAC,iBAAiB,EAAEL,qBAAqB,CAAC;UACjEP,QAAQ,CAACY,cAAc,CAAC,gBAAgB,EAAEF,oBAAoB,CAAC;QACjE;MACF,CAAC;IACH;IAEA,OAAO,MAAM,CAAC,CAAC;EACjB,CAAC,EAAE,CAACpB,MAAM,EAAES,KAAK,EAAED,QAAQ,EAAET,QAAQ,CAAC,CAAC;AACzC;AAAC,IAtCeQ,mBAAmB;EAAA,QACGX,YAAY;AAAA"},"metadata":{},"sourceType":"module"}