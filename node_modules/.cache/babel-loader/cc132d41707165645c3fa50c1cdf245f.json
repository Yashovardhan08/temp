{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n  return function (source) {\n    return source.lift(new SingleOperator(predicate, source));\n  };\n}\nvar SingleOperator = /*@__PURE__*/function () {\n  function SingleOperator(predicate, source) {\n    this.predicate = predicate;\n    this.source = source;\n  }\n  SingleOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  };\n  return SingleOperator;\n}();\nvar SingleSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SingleSubscriber, _super);\n  function SingleSubscriber(destination, predicate, source) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.seenValue = false;\n    _this.index = 0;\n    return _this;\n  }\n  SingleSubscriber.prototype.applySingleValue = function (value) {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  };\n  SingleSubscriber.prototype._next = function (value) {\n    var index = this.index++;\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  };\n  SingleSubscriber.prototype.tryNext = function (value, index) {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n  SingleSubscriber.prototype._complete = function () {\n    var destination = this.destination;\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError());\n    }\n  };\n  return SingleSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AAEA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAC3B,SAASC,UAAU,QAAQ;AAkD3B,SAAMC,UAAU,QAAU,oBAAuE;OAC/F,SAAOC,MAAC,UAA0B;EACnC;IAAA;EAAA;AAED;IACEC,8BAAoB,YACsB;WADtBA,wBAAuE;IACvE,0BAAsB;IACzC;EAED;gBACS,UAAO,KAAU,GAAI,oBAAiB,QAAU,EAAE;IAC1D;EACH;EARA,OAQCA;AAOD;IAAkCC,0CAAaC;EAK7CN,kCAAY,QACQ;WADpBK,gBAGE,YAAM,WAAY,QACnB;IAHmB,4BAAuE;IACvEE,2BAAsB;IANlCA,eAASC,MAAY;IAErBD,eAAiB,GAAC;;IAMzB;EAEO;kBACG,UAAW;QAClB,IAAI,CAACE,WAAW;MACjB;WACC;MACA,IAAI,CAACA,YAAW,IAAG;MACpB;IACF;EAES;kBACM,UAAU,MAAG;IAE3B,IAAIC,KAAK,aAAW;QAClB,IAAI,CAACC,SAAQ;MACd;WACC;MACD;IACF;EAEO;kBACF;QACF;UACE,IAAI,CAACA,iBAAiBD,KAAK,EAAE;QAC9B;MACF;IAAC,SACAE,GAAK;MACN;IACF;EAES;kBACF,UAAkB,CAACC,YAAY;IAErC,IAAIC,WAAU,GAAI,IAAE;QAClB,aAAY,GAAI;MAChBA,WAAW,CAACC,SAAQ,CAAEN,SAAC;MACxBK;WACC;MACDA;IACF;EACH;EAlDkC,uBAkDjC","names":["tslib_1","Subscriber","EmptyError","single","SingleOperator","SingleSubscriber","_super","_this","source","seenValue","index","predicate","err","_complete","destination","next"],"sources":["../../../src/internal/operators/single.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}