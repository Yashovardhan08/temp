{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function count(predicate) {\n  return function (source) {\n    return source.lift(new CountOperator(predicate, source));\n  };\n}\nvar CountOperator = /*@__PURE__*/function () {\n  function CountOperator(predicate, source) {\n    this.predicate = predicate;\n    this.source = source;\n  }\n  CountOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  };\n  return CountOperator;\n}();\nvar CountSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(CountSubscriber, _super);\n  function CountSubscriber(destination, predicate, source) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.count = 0;\n    _this.index = 0;\n    return _this;\n  }\n  CountSubscriber.prototype._next = function (value) {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  };\n  CountSubscriber.prototype._tryPredicate = function (value) {\n    var result;\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.count++;\n    }\n  };\n  CountSubscriber.prototype._complete = function () {\n    this.destination.next(this.count);\n    this.destination.complete();\n  };\n  return CountSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AAGA,OAAO,KAAEA,OAAU,MAAE,OAAM;AA6D3B,SAAMC,UAAU,QAAS,eAAuE;OAC9F,SAAOC,KAAC,UAA0B;EACnC;IAAA;EAAA;AAED;IACEC,6BAAoB,YACsB;WADtBA,uBAAuE;IACvE,0BAAsB;IACzC;EAED;eACS,UAAO,KAAU,aAAIC,UAAgB,QAAU,EAAE;IACzD;EACH;EARA,OAQCD;AAOD;IAAiCE,yCAAaC;EAI5CN,iCAAY,QACQ;WADpBK,eAGE,YAAM,WAAY,QACnB;IAHmB,4BAAuE;IACvEE,2BAAsB;IALlCA,YAAK,GAAYC,MAAC;IAClBD,WAAK,GAAW,CAAC;;IAMxB;EAES;iBACC,UAAW;QAClB,IAAI,CAACE;MACN;WACC;MACD;IACF;EAEO;iBACU;IAEhB,IAAIC;QACF;MACDA;IAAC,SACAC,GAAK;MACL,gBAAO;MACR;IAED;QACED,MAAK;MACN;IACF;EAES;iBACH,UAAgB,CAACE,SAAK,GAAO;IAClC,IAAI,CAACC,WAAW,CAACC,SAAQ,CAAEZ,KAAC;IAC7B;EACH;EArCiC,sBAqChC","names":["tslib_1","Subscriber","count","CountOperator","subscriber","CountSubscriber","_super","_this","source","predicate","result","err","_complete","destination","next"],"sources":["../../../src/internal/operators/count.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}