{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\nexport function windowCount(windowSize, startWindowEvery) {\n  if (startWindowEvery === void 0) {\n    startWindowEvery = 0;\n  }\n  return function windowCountOperatorFunction(source) {\n    return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n  };\n}\nvar WindowCountOperator = /*@__PURE__*/function () {\n  function WindowCountOperator(windowSize, startWindowEvery) {\n    this.windowSize = windowSize;\n    this.startWindowEvery = startWindowEvery;\n  }\n  WindowCountOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  };\n  return WindowCountOperator;\n}();\nvar WindowCountSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WindowCountSubscriber, _super);\n  function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n    var _this = _super.call(this, destination) || this;\n    _this.destination = destination;\n    _this.windowSize = windowSize;\n    _this.startWindowEvery = startWindowEvery;\n    _this.windows = [new Subject()];\n    _this.count = 0;\n    destination.next(_this.windows[0]);\n    return _this;\n  }\n  WindowCountSubscriber.prototype._next = function (value) {\n    var startWindowEvery = this.startWindowEvery > 0 ? this.startWindowEvery : this.windowSize;\n    var destination = this.destination;\n    var windowSize = this.windowSize;\n    var windows = this.windows;\n    var len = windows.length;\n    for (var i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    var c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      var window_1 = new Subject();\n      windows.push(window_1);\n      destination.next(window_1);\n    }\n  };\n  WindowCountSubscriber.prototype._error = function (err) {\n    var windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  };\n  WindowCountSubscriber.prototype._complete = function () {\n    var windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  };\n  WindowCountSubscriber.prototype._unsubscribe = function () {\n    this.count = 0;\n    this.windows = null;\n  };\n  return WindowCountSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AACA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAE3B,SAASC,UAAS,QAAM,eAAa;AAkErC,SAAMC,OAAU,oBAAe;OACA;EAC7B,oBAAgB;IACdC,gBAAc,GAAK;EACrB;EACD;IAED;EAEE;;uBACoB,4BAAwB;EAC5C,SAACC;IAED;IACE,qBAAc,GAAUD,gBAAI;EAC9B;EACFC,6BAAC;IAAA;EAOD;EAAuC;GAIrC;yBAGE,gBAAM,UAAYC,MAEnB;SALqB,gCAAsC;WACxCC,iCAAkB;IAClB,uBAAgB,KAAhB,aAAgB,CAAQ;IALpCC,iBAA0B,cAAkB;IAC5CA,gBAAkB;IAMxBA,sBAAqB,GAACJ,gBAAY;;IACnCI;IAESC,iCAAK;IACb,OAAMD;;uBAEa,UAAK,MAAW;IACnC,IAAMJ,gBAAe,OAAQ;IAC7B,IAAMK,WAAM,GAAQ,gBAAO;IAE3B,cAAc,GAAG,IAAG,WAAY;QAC9BC,OAAO,GAAG,IAAC,CAAIA,OAAO;QACvBC;IACD,KAAO,IAAGC,IAAK,OAAKD,GAAG,SAAU,OAAK;MAClCD,OAAM,GAAI,CAACG,IAAG;;QAEjBC;IACD,IAAIA,KAAE,CAAI,IAACA,IAAKV,gBAAG,KAAgB,CAAK,IAAC,CAAI,IAAC,CAAIW,MAAC,EAAM;MACvDL,OAAM,MAAM,EAAG,SAAI,EAAO;;QAE1B,YAAY,mBAAa;MAC1B;MACFA;MAESD;IACR;;uBAES,CAAOO,SAAO,CAAGC,MAAM,aAAaC;eACzC,OAAQ,QAAQ;eACjB;MACF;QACIR,QAAWS,KAAC,EAAM,MAAK;MAC7B;IAES;IACR,IAAM,YAAU,MAAK,IAAO,CAAC;;uBAEpB,CAAOH,SAAO,CAAGI,SAAM,GAAK,YAAQ;eACzC,OAAQ,QAAQ;eACjB;MACF;QACIV,QAAWS,KAAC,WAAW;MAC7B;IAES;IACR,IAAI,CAACV,WAAU;;EAEjBF,qBAAC;IACH;IAxDuC,IAAU,QAwDhD","names":["tslib_1","Subscriber","Subject","startWindowEvery","WindowCountOperator","_super","WindowCountSubscriber","_this","destination","windows","len","i","next","c","closed","prototype","_error","err","shift","_complete"],"sources":["../../../src/internal/operators/windowCount.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}