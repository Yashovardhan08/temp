{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n  return function (source) {\n    return source.lift(new SkipWhileOperator(predicate));\n  };\n}\nvar SkipWhileOperator = /*@__PURE__*/function () {\n  function SkipWhileOperator(predicate) {\n    this.predicate = predicate;\n  }\n  SkipWhileOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  };\n  return SkipWhileOperator;\n}();\nvar SkipWhileSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SkipWhileSubscriber, _super);\n  function SkipWhileSubscriber(destination, predicate) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.skipping = true;\n    _this.index = 0;\n    return _this;\n  }\n  SkipWhileSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  };\n  SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n    try {\n      var result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n  return SkipWhileSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AAEA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAe3B,SAAMC,UAAU,QAAa,eAA+C;OAC1E,SAAOC,SAAC,UAA0B;EACnC;IAAA;EAAA;AAED;IACEC,iCAAoB,YAA+C;WAA/CA,2BAA+C;IAClE;EAED;mBACe,CAACC,SAAS,CAACC,IAAI,uBAAoB,QAAU,EAAE;IAC7D;EACH;EAPA,OAOCF;AAOD;IAAqCG,6CAAaC;EAIhDP,qCAAY,QACQ;WADpBM,mBAEE,YAAM,WAAY;IADA,4BAA+C;IAJ3DE,eAAQ,GAAYC,SAAK;IACzBD,cAAgB,GAAE;;IAKzB;EAES;qBACS,UAAQ,SAAW,UAACE;IACrC,IAAIC,WAAK,GAAQ,IAAE;QACjB,IAAI,CAACC;MACN;IAED;QACE,cAAY,EAAI;MACjBD;IACF;EAEO;qBACF;QACF;MACA,IAAIE,MAAC,GAAQ,IAAG,UAAQ,MAAQ;MACjC;IAAC,SACAC,GAAK;MACN;IACF;EACH;EA5BqC,0BA4BpC","names":["tslib_1","Subscriber","skipWhile","SkipWhileOperator","prototype","call","SkipWhileSubscriber","_super","_this","predicate","value","destination","skipping","result","err"],"sources":["../../../src/internal/operators/skipWhile.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}