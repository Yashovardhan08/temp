{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler, config) {\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n  if (config === void 0) {\n    config = defaultThrottleConfig;\n  }\n  return function (source) {\n    return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n  };\n}\nvar ThrottleTimeOperator = /*@__PURE__*/function () {\n  function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n    this.duration = duration;\n    this.scheduler = scheduler;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n  ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n  };\n  return ThrottleTimeOperator;\n}();\nvar ThrottleTimeSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ThrottleTimeSubscriber, _super);\n  function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n    var _this = _super.call(this, destination) || this;\n    _this.duration = duration;\n    _this.scheduler = scheduler;\n    _this.leading = leading;\n    _this.trailing = trailing;\n    _this._hasTrailingValue = false;\n    _this._trailingValue = null;\n    return _this;\n  }\n  ThrottleTimeSubscriber.prototype._next = function (value) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, {\n        subscriber: this\n      }));\n      if (this.leading) {\n        this.destination.next(value);\n      } else if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    }\n  };\n  ThrottleTimeSubscriber.prototype._complete = function () {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  };\n  ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n    var throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  };\n  return ThrottleTimeSubscriber;\n}(Subscriber);\nfunction dispatchNext(arg) {\n  var subscriber = arg.subscriber;\n  subscriber.clearThrottle();\n}","map":{"version":3,"mappings":";AACA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAE3B,SAASC,UAAO,QAAM,eAAoB;AAE1C,SAAyBC,iCAA6B;AAkFtD,SAAMC,qBAA0B,QAAgB,YAEhB;OADA,2CAAgCC;EAChC;IAC9BC,SAAO,QAAC;EACT;EAED;IACED,8BAAoB;;SACA;IAAA,OAAwBE;EAAA;;wBAExB,gBAAiB;EACrC,SAACC;IAED;IACE,cAAc,YACZ;IAEH;IACH,wBAAC;EAZD;EAmBAA;IAAwC,kDAAa;EAKnD;SAAAA,oBAKE;;0BAHkB,gBAAwB;SACxB,UAAO,uBAAS;WAChBC,sBAAiB;IAP7B,uBAAiB,KAAY,aAAM;IACnCC,yBAAoB;;IAQ3BA;IAESA;IACRA,KAAI,kBAAgB;SAClB,eAAS,GAAU;gBACb;;wBAEL;QACF;UAAM;QACD,IAAI,CAACC,cAAc,GAAGC,KAAK;QAC3B,IAAI,CAACC,iBAAS;;;UAGhB,IAAI,CAAC,cAAc,GAAG,KAAKP,SAAC;QAAAQ;MAAA;UAC5B,IAAI,CAACC;QACN;MACF,OACF;QAES;QACA,IAAC,kBAAmB;MAC1B;;;wBAEK;QACL,IAAI,CAACF,iBAAY;MAClB;MACF;IAED,OACQ;MACF,gBAAW;;;wBAGN,UAAc,cAAQ;iBACtB,iBAAiB;iBACvB;MACD,SAASG,QAAC,IAAW,IAAG;QACpB,IAAC,YAAO,CAASC,IAAE;QACnB,IAAC,eAAiB;QACvB;MACF;MACHC,qBAAC;MApDiD,IAoDjD;MAMQ,cAAmC;IAClC;EACR;EACD","names":["tslib_1","Subscriber","async","defaultThrottleConfig","config","scheduler","source","ThrottleTimeOperator","ThrottleTimeSubscriber","_this","_trailingValue","value","_hasTrailingValue","subscriber","leading","trailing","next","throttled"],"sources":["../../../src/internal/operators/throttleTime.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}