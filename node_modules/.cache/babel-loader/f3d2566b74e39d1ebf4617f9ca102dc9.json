{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n  var hasSeed = false;\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n  return function scanOperatorFunction(source) {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\nvar ScanOperator = /*@__PURE__*/function () {\n  function ScanOperator(accumulator, seed, hasSeed) {\n    if (hasSeed === void 0) {\n      hasSeed = false;\n    }\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.hasSeed = hasSeed;\n  }\n  ScanOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  };\n  return ScanOperator;\n}();\nvar ScanSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ScanSubscriber, _super);\n  function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n    var _this = _super.call(this, destination) || this;\n    _this.accumulator = accumulator;\n    _this._seed = _seed;\n    _this.hasSeed = hasSeed;\n    _this.index = 0;\n    return _this;\n  }\n  Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n    get: function () {\n      return this._seed;\n    },\n    set: function (value) {\n      this.hasSeed = true;\n      this._seed = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ScanSubscriber.prototype._next = function (value) {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  };\n  ScanSubscriber.prototype._tryNext = function (value) {\n    var index = this.index++;\n    var result;\n    try {\n      result = this.accumulator(this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  };\n  return ScanSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AAEA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAoD3B,SAAMC,UAAU,QAAW,eAAiE;OAC1F,SAAWC,IAAG,YAAM;EAMpB,IAAIC,UAAU;MACZC,SAAO,CAAGC,MAAK;IAChBF;EAED;SACE,SAAOG,oBAAgB,OAAa;IACpC;EACH;AAED;IACEC,4BAAoB,YAAmF;WAAAA,uCAAwB;IAA3G,gBAAW,KAAX;MAA6DJ,OAAI,GAAJ,KAAY;IAAU;IAA4B;IAEnI;IACE,YAAO,GAAOA;EAChB;EACFI,sBAAC;IAAA;EAOD;EAAmC;GAYjC;kBAAA,GAEE,uBAAMC,MAAY;SAF4B,iCAAmD;WAAUC,cAAK,CAAOC;IACrG,uBAAO,CAAS;IAZ5BC,iBAAkB;;IAczBA;IAZDA;WAAAA;;QAEC;SAED,YAAS;MACP,OAAK,KAAOC,KAAG;;IAEjBC,GAAC;;;IALA;IAYSC;IACRC,YAAU;;gBAEH,UAAW,CAACC,KAAK,aAAOC;QAC9B;UAAM;MACL,gBAAY,KAAS,MAAM,CAAC;KAC7B,MACF;MAEO,0BAAQ;IACd;;gBAEI;QACFC,QAAM,IAAG,CAAIA,KAAC;QACfC;IAAC;MACAA,MAAK,mBAAkB,CAAG,IAAE;KAC7B,CACD,OAAKC,GAAI,EAAG;MACR,IAAC,YAAY,CAAIC,KAAC,IAAQ;IAC/B;IACH,kBAAC;IArCkC,IAAU,YAqC5C","names":["tslib_1","Subscriber","scan","hasSeed","arguments","length","scanOperatorFunction","ScanOperator","_super","ScanSubscriber","destination","_this","_seed","set","enumerable","configurable","_next","value","index","result","err","error"],"sources":["../../../src/internal/operators/scan.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}