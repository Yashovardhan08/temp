{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive) {\n  if (inclusive === void 0) {\n    inclusive = false;\n  }\n  return function (source) {\n    return source.lift(new TakeWhileOperator(predicate, inclusive));\n  };\n}\nvar TakeWhileOperator = /*@__PURE__*/function () {\n  function TakeWhileOperator(predicate, inclusive) {\n    this.predicate = predicate;\n    this.inclusive = inclusive;\n  }\n  TakeWhileOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n  };\n  return TakeWhileOperator;\n}();\nvar TakeWhileSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(TakeWhileSubscriber, _super);\n  function TakeWhileSubscriber(destination, predicate, inclusive) {\n    var _this = _super.call(this, destination) || this;\n    _this.predicate = predicate;\n    _this.inclusive = inclusive;\n    _this.index = 0;\n    return _this;\n  }\n  TakeWhileSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n    var result;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  };\n  TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n    var destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      if (this.inclusive) {\n        destination.next(value);\n      }\n      destination.complete();\n    }\n  };\n  return TakeWhileSubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AAEA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAmD3B,SAAMC,UAAU,QACZ,eACA;OAAA;EACF,aAAO,KAAC,KAAqB;IAClBC,iBAAO;EAAP;EACZ;IAED;EACE;;qBAEY,GAAS,aAAS;EAAG,SAACC;IAElC;IACE,cAAc,YACV;EACN;EACFA,2BAAC;IAAA;EAOD;EAAqC;GAGnC;uBAIE,gBAAM,UAAYC,QACnB;SAHW,8BAA+C;WAC/CC,+BAAkB;IALtB,YAAKD,MAAa;;IAOzBE;IAESA;IACR,OAAMA;;qBAEF;QACFC,WAAS,GAAK,gBAAe;QAC9BC;IAAC;MACAA,aAAY,UAAW;aAExBC;MACGF,WAAC,MAAe,IAAK;MAC1B;IAEO;IACN,IAAM,eAAc,MAAK,SAAW;;qBAEvB,CAACG,SAAK,CAAKC,cAAE;QACzBJ;eAAM;MACLA,WAAS,WAAW;WAEnB;MACD,kBAAY,EAAQ;QACrBA;MACF;MACHA,oBAAC;IAjCoC","names":["tslib_1","Subscriber","inclusive","TakeWhileOperator","_super","TakeWhileSubscriber","_this","destination","result","err","prototype","nextOrComplete"],"sources":["../../../src/internal/operators/takeWhile.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}