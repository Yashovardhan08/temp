{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n  var absoluteDelay = isDate(delay);\n  var delayFor = absoluteDelay ? +delay - scheduler.now() : Math.abs(delay);\n  return function (source) {\n    return source.lift(new DelayOperator(delayFor, scheduler));\n  };\n}\nvar DelayOperator = /*@__PURE__*/function () {\n  function DelayOperator(delay, scheduler) {\n    this.delay = delay;\n    this.scheduler = scheduler;\n  }\n  DelayOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  };\n  return DelayOperator;\n}();\nvar DelaySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DelaySubscriber, _super);\n  function DelaySubscriber(destination, delay, scheduler) {\n    var _this = _super.call(this, destination) || this;\n    _this.delay = delay;\n    _this.scheduler = scheduler;\n    _this.queue = [];\n    _this.active = false;\n    _this.errored = false;\n    return _this;\n  }\n  DelaySubscriber.dispatch = function (state) {\n    var source = state.source;\n    var queue = source.queue;\n    var scheduler = state.scheduler;\n    var destination = state.destination;\n    while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n    if (queue.length > 0) {\n      var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay_1);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  };\n  DelaySubscriber.prototype._schedule = function (scheduler) {\n    this.active = true;\n    var destination = this.destination;\n    destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n      source: this,\n      destination: this.destination,\n      scheduler: scheduler\n    }));\n  };\n  DelaySubscriber.prototype.scheduleNotification = function (notification) {\n    if (this.errored === true) {\n      return;\n    }\n    var scheduler = this.scheduler;\n    var message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  };\n  DelaySubscriber.prototype._next = function (value) {\n    this.scheduleNotification(Notification.createNext(value));\n  };\n  DelaySubscriber.prototype._error = function (err) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  };\n  DelaySubscriber.prototype._complete = function () {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  };\n  return DelaySubscriber;\n}(Subscriber);\nvar DelayMessage = /*@__PURE__*/function () {\n  function DelayMessage(time, notification) {\n    this.time = time;\n    this.notification = notification;\n  }\n  return DelayMessage;\n}();","map":{"version":3,"mappings":";AAAA,OAAO,KAAEA,OAAO,MAAM;AACtB,SAASC,aAAQ,oBAAuB;AAExC,SAASC,cAAY,gBAAM;AAE3B,SAASC,kBAAc,eAAM;AAsD7B,SAAMC,YAAe,QACI,iBAAgC;OAAhC;EACvB,IAAMC,cAAa,KAAG,GAAM;IACtBA,SAAQ,GAAGJ;EACjB;EACD;EAED;EACE,uBAAoB;IAAA,OACAK,MAAwB;EAAA;;iBAAxB,gBAAwB;EAC5C,SAACC;IAED;IACE,cAAc,YAAU;EAC1B;EACFA,uBAAC;IAAA;EAaD;EAAiC;GAwB/B;mBAAA,GAGE,uBAAMC,MAAY;SAFA,UAAK,CAALC,eAAa;WACbA,2BAAwB;IAzBpC,YAAKD,MAA8B;IACnCE,cAAMC,KAAY;IAClBD,eAAO,GAAYL,SAAM;;IAyBhCK;IAvBcA,qBAAQ;IACrB,OAAMA,KAAM;;iBAEN,SAAY,GAAM,UAAUE;IAClC,IAAMN,cAAc,OAAM;IAE1B,SAAO,GAAKA,MAAC,CAAMO,KAAI;QACrBR,SAAM,GAAKO,KAAG,UAAa;QAC5BE;IAED,OAAID,KAAM,OAAS,GAAG;MACpBA,KAAM,MAAK,GAAGE,YAAY,QAAQ,CAACD,WAAO;;QAE3CD;UAAMG;MACL,IAAI,CAACC,cAAc;WAEpB;MACF;MAQOX;IACN;;iBAEW,CAACY,SAAI,UAAU,GAAQ,UAAgBb,SAAgB;QAChE,OAAM,GAAE,IAAM;QACZS;IACLA;MAEOR;MAAAQ,6BAAR;MAAAT,SAA6B;IAC3B;;iBAEC;IAED,IAAM,YAAY,KAAK;MACjB;IACN;IAEA,IAAIA,SAAK,GAAM,IAAK,UAAO;QACzBc,OAAK,OAASC,YAAY;QAC3B;IACF;MAES,wBAAK;IACb;EACF,CAAC;EAESX,kCAAM,UAAhBY,KAAyB;IACvB,IAAI,CAACC,oBAAe;;iBAEf,UAAY,CAAKC,MAAM;IAC5B,IAAI,CAACC,cAAc;IACpB;IAES;IACR,IAAI,CAACC;;EAEPhB,eAAC;IACH,yBAAC;IAnEgC,IAAU,YAmE1C;EAED;EACE,sBAA4B;YAAA;gBACA,4BAA6B;EACzD,SAACW;IACH,gBAAC;IAAA","names":["tslib_1","async","isDate","Subscriber","Notification","scheduler","source","DelayOperator","_super","DelaySubscriber","_this","delay","state","queue","destination","notification","delay_1","schedule","prototype","message","DelayMessage","value","scheduleNotification","_error","errored","unsubscribe"],"sources":["../../../src/internal/operators/delay.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}