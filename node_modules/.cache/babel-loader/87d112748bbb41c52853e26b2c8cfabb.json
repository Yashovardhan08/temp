{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_map,_observable_from,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n  if (resultSelector) {\n    return function (source) {\n      return source.pipe(exhaustMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n  return function (source) {\n    return source.lift(new ExhaustMapOperator(project));\n  };\n}\nvar ExhaustMapOperator = /*@__PURE__*/function () {\n  function ExhaustMapOperator(project) {\n    this.project = project;\n  }\n  ExhaustMapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  };\n  return ExhaustMapOperator;\n}();\nvar ExhaustMapSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ExhaustMapSubscriber, _super);\n  function ExhaustMapSubscriber(destination, project) {\n    var _this = _super.call(this, destination) || this;\n    _this.project = project;\n    _this.hasSubscription = false;\n    _this.hasCompleted = false;\n    _this.index = 0;\n    return _this;\n  }\n  ExhaustMapSubscriber.prototype._next = function (value) {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  };\n  ExhaustMapSubscriber.prototype.tryNext = function (value) {\n    var result;\n    var index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.hasSubscription = true;\n    this._innerSub(result);\n  };\n  ExhaustMapSubscriber.prototype._innerSub = function (result) {\n    var innerSubscriber = new SimpleInnerSubscriber(this);\n    var destination = this.destination;\n    destination.add(innerSubscriber);\n    var innerSubscription = innerSubscribe(result, innerSubscriber);\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  };\n  ExhaustMapSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  };\n  ExhaustMapSubscriber.prototype.notifyNext = function (innerValue) {\n    this.destination.next(innerValue);\n  };\n  ExhaustMapSubscriber.prototype.notifyError = function (err) {\n    this.destination.error(err);\n  };\n  ExhaustMapSubscriber.prototype.notifyComplete = function () {\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  };\n  return ExhaustMapSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":";AAKA,OAAO,KAAKA,OAAE,MAAM,OAAQ;AAC5B,SAASC,WAAM,OAAM;AACrB,SAASC,gCAAuB;AAuDhC,SAAMC,qBACJ,uBAC6G;OAE7G,SAAIC,UAAgB;MAElBC,cAAO;IAKR;MAAA;QAAA;UAAA;QAAA;MAAA;IAAA;EACD;SACE,UAAMC,MAAM;IAAiC;EAChD;AAED;IACEC,kCAA4E;WAAxDA,kBAAwD;IAC3E;EAED;oBACgB,UAAU,KAAI,uBAAqB,QAAU,EAAE;IAC9D;EACH;EAPA,OAOCA;AAOD;IAAyCC,8CAA2BC;EAKlET,sCAAY,QACQ;WADpBQ,oBAEE,YAAM,SAAY;IADA,uBAAO,CAAiD;IALpEE,uBAAe;IACfA,qBAAe,QAAM;IACrBA,kBAAU;;IAKjB;EAES;sBACE,UAAe,CAAEC;QACzB,KAAK,gBAAe;MACrB;IACF;EAEO;sBACyB;IAC/B,IAAMC,MAAK;IACX,IAAIC;QACF;MACDD;IAAC,SACAE,GAAK;MACL,gBAAO;MACR;IACD;IACA,IAAI,CAACC,eAAU,GAAQ;IACxB;EAEO;sBACA,UAAsB,uBAAsBH,MAAM;IACxD,IAAMI,eAAc,GAAI,IAACC,qBAA4B;IACrD,eAAe,GAAC,gBAAiB;IACjCC,WAAM,oBAAoB;IAI1B,IAAIC,iBAAiB,iBAAK,OAAiB;QACzCA,iBAAgB,oBAAmB;MACpCD;IACF;EAES;sBACH,CAAYE,SAAQ;IACzB,IAAI,CAACC,YAAK;QACR,KAAK,gBAAY;MAClB;IACD;IACD;EAED;sBACkB,CAACD,SAAM,WAAY;IACpC;EAED;sBACkB,CAACA,SAAU,CAACE,WAAC;IAC9B;EAED;sBACO,UAAkB,eAAM;IAC7B,IAAI,gBAAK,GAAc;QACrB,IAAI,CAACD,YAAY;MAClB;IACF;EACH;EAhEyC,2BAgExC","names":["tslib_1","map","from","SimpleOuterSubscriber","exhaustMap","resultSelector","source","ExhaustMapOperator","ExhaustMapSubscriber","_super","_this","_next","result","index","err","hasSubscription","innerSubscriber","SimpleInnerSubscriber","destination","innerSubscription","prototype","hasCompleted","notifyError"],"sources":["../../../src/internal/operators/exhaustMap.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}