{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  return function (source) {\n    var project;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    var observables = args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\nvar WithLatestFromOperator = /*@__PURE__*/function () {\n  function WithLatestFromOperator(observables, project) {\n    this.observables = observables;\n    this.project = project;\n  }\n  WithLatestFromOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  };\n  return WithLatestFromOperator;\n}();\nvar WithLatestFromSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WithLatestFromSubscriber, _super);\n  function WithLatestFromSubscriber(destination, observables, project) {\n    var _this = _super.call(this, destination) || this;\n    _this.observables = observables;\n    _this.project = project;\n    _this.toRespond = [];\n    var len = observables.length;\n    _this.values = new Array(len);\n    for (var i = 0; i < len; i++) {\n      _this.toRespond.push(i);\n    }\n    for (var i = 0; i < len; i++) {\n      var observable = observables[i];\n      _this.add(subscribeToResult(_this, observable, undefined, i));\n    }\n    return _this;\n  }\n  WithLatestFromSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n    this.values[outerIndex] = innerValue;\n    var toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      var found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  };\n  WithLatestFromSubscriber.prototype.notifyComplete = function () {};\n  WithLatestFromSubscriber.prototype._next = function (value) {\n    if (this.toRespond.length === 0) {\n      var args = [value].concat(this.values);\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  };\n  WithLatestFromSubscriber.prototype._tryProject = function (args) {\n    var result;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  };\n  return WithLatestFromSubscriber;\n}(OuterSubscriber);","map":{"version":3,"mappings":";AAGA,OAAO,KAAEA,aAAe,OAAQ;AAEhC,SAASC,uBAAmB,oBAAM;AAiElC,SAAMC,iBAAU,QAAc;OAAO,uBAAqE;UAArE;OAAA,0BAAqE;;EACxG;SACE,UAAiBC;IACjB,IAAIC,OAAO;QACT,OAAOC,IAAG,KAAK,OAAM;MACtBD;IACD;IACA,eAAc,GAAIC,IAAC;IACnB;EACH;AAED;IACEC,sCAAoB,YAC6C;WAD7CA,kCAA8B;IAC9B,8BAA6C;IAChE;EAED;wBACgB,UAAc,4BAAyB,QAAU,EAAE;IAClE;EACH;EARA,OAQCA;AAOD;IAA6CC,kDAAqBC;EAIhER,0CAAY,QACQ;WADpBO,wBAGE,CAAME,WAAW,EAACC,WAYnB;IAdmB,kBAAW,KAAX,kBAA8B;IAC9BC,+BAA6C;IAJzDA,gBAASP,OAAgB;IAM/BO,KAAM,UAAM;IACZ,OAAK,cAAa,OAAS;IAE3BA,KAAK,OAAK,GAAI,IAAGC,KAAM,CAAEC,GAAG;SAC1B,IAAIC,CAAC,UAAUD,KAAKC,CAAC,EAAE;MACxBH;IAED;SACE,IAAIG,WAAUD,GAAG;MACjB,cAAS,cAAwB;MAClCF;;IACF;EAED;0BAEc,UAAc,WAAW;IACrC,IAAM,kBAAiB,cAAU;IACjC,IAAII,SAAS,GAAC,IAAM,UAAM;QACxBA,SAAW,OAAG,MAAU;MACxB,IAAIC,KAAK,YAAS;UAChBA,UAAU;QACXD;MACF;IACF;EAED;EAEAR,wBAAC,yCAES;0BACW,UAAW,CAACU,KAAE;QAC/B,IAAM,UAAQ,OAAK,KAAK;MACxB,IAAIZ,IAAI,GAAC,MAAO,CAAE;UAChB,IAAI,CAACD;QACN;aACC;QACD;MACF;IACF;EAEO;0BACU;IAChB,IAAIc;QACF;MACDA;IAAC,SACAC,GAAK;MACL,gBAAO;MACR;IACD;IACD;EACH;EA1D6C,+BA0D5C","names":["tslib_1","OuterSubscriber","subscribeToResult","source","project","args","WithLatestFromOperator","WithLatestFromSubscriber","_super","destination","observables","_this","Array","len","i","toRespond","found","_next","result","err"],"sources":["../../../src/internal/operators/withLatestFrom.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}