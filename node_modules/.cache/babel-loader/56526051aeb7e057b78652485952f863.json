{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n  if (subscriptionDelay) {\n    return function (source) {\n      return new SubscriptionDelayObservable(source, subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector));\n    };\n  }\n  return function (source) {\n    return source.lift(new DelayWhenOperator(delayDurationSelector));\n  };\n}\nvar DelayWhenOperator = /*@__PURE__*/function () {\n  function DelayWhenOperator(delayDurationSelector) {\n    this.delayDurationSelector = delayDurationSelector;\n  }\n  DelayWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  };\n  return DelayWhenOperator;\n}();\nvar DelayWhenSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DelayWhenSubscriber, _super);\n  function DelayWhenSubscriber(destination, delayDurationSelector) {\n    var _this = _super.call(this, destination) || this;\n    _this.delayDurationSelector = delayDurationSelector;\n    _this.completed = false;\n    _this.delayNotifierSubscriptions = [];\n    _this.index = 0;\n    return _this;\n  }\n  DelayWhenSubscriber.prototype.notifyNext = function (outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  };\n  DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n    this._error(error);\n  };\n  DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n    var value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  };\n  DelayWhenSubscriber.prototype._next = function (value) {\n    var index = this.index++;\n    try {\n      var delayNotifier = this.delayDurationSelector(value, index);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n  DelayWhenSubscriber.prototype._complete = function () {\n    this.completed = true;\n    this.tryComplete();\n    this.unsubscribe();\n  };\n  DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n    subscription.unsubscribe();\n    var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    if (subscriptionIdx !== -1) {\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n    }\n    return subscription.outerValue;\n  };\n  DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n    var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n    if (notifierSubscription && !notifierSubscription.closed) {\n      var destination = this.destination;\n      destination.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n  };\n  DelayWhenSubscriber.prototype.tryComplete = function () {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  };\n  return DelayWhenSubscriber;\n}(OuterSubscriber);\nvar SubscriptionDelayObservable = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SubscriptionDelayObservable, _super);\n  function SubscriptionDelayObservable(source, subscriptionDelay) {\n    var _this = _super.call(this) || this;\n    _this.source = source;\n    _this.subscriptionDelay = subscriptionDelay;\n    return _this;\n  }\n  SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  };\n  return SubscriptionDelayObservable;\n}(Observable);\nvar SubscriptionDelaySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SubscriptionDelaySubscriber, _super);\n  function SubscriptionDelaySubscriber(parent, source) {\n    var _this = _super.call(this) || this;\n    _this.parent = parent;\n    _this.source = source;\n    _this.sourceSubscribed = false;\n    return _this;\n  }\n  SubscriptionDelaySubscriber.prototype._next = function (unused) {\n    this.subscribeToSource();\n  };\n  SubscriptionDelaySubscriber.prototype._error = function (err) {\n    this.unsubscribe();\n    this.parent.error(err);\n  };\n  SubscriptionDelaySubscriber.prototype._complete = function () {\n    this.unsubscribe();\n    this.subscribeToSource();\n  };\n  SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  };\n  return SubscriptionDelaySubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AACA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAC3B,SAASC,UAAU,QAAQ,eAAe;AAE1C,SAASC,kBAAiB,eAAM;AAEhC,SAASC,uBAAmB,oBAAM;AAqElC,SAAMC,iBAAuB,mCACA;OAC3B,SAAIC,SAAiB,sBAAE;MACrBC,iBAAQ;WACN,UAAIC;aACD,IAAKC,2BAAsB,0BAAuB,EAACC;IACzD;EACD;EACD;IAAA;EAAA;AAED;IACEC,iCAAoB;WAAAA;IACnB;EAED;mBACe,CAACC,SAAS,CAACC,IAAI,uBAAoB,QAAU,EAAE;IAC7D;EACH;EAPA,OAOCF;AAOD;IAAwCG,6CAAqBC;EAK3Dd,qCAAY,QACQ;WADpBa,mBAEE,YAAM,uBACP;IAFmB,4BAAqB,EAArBE;IALZC,2BAA2B;IAC3BA;IACAA,gCAAkB;;IAKzB;EAED;qBAGO,CAAWL,SAAO,WAAY;IACnC,IAAI,CAACI,2BAA2B,CAAC;IACjC,IAAI,CAACE,kBAAc;IACpB;EAED;qBACc,UAAO;IACpB;EAED;qBACgB,CAAIN,SAAC,eAAmB,aAAUO;IAChD,IAAIC,KAAK,GAAE;QACTA,KAAK;MACN;IACD;IACD;EAES;qBACM,CAAIR,SAAS;IAC3B,IAAIS;QACF;MACA,IAAIC,aAAa,GAAE;UACjBA,aAAa,EAAC;QACf;MACF;IAAC,SACAC,GAAK;MACN;IACF;EAES;qBACM,UAAQ;IACtB,IAAI,CAACC,YAAW,IAAG;IACnB,IAAI,CAACC,WAAW,EAAE;IACnB;EAEO;qBACO,UAAW,CAAEP,kBAAC;IAE3BQ,YAAM,YAAkB,EAAI;IAC5B,IAAIC,eAAe,OAAO,2BAAE;QAC1BA,eAAK;MACN;IAED;IACD;EAEO;qBACA,UAAoB,SAAG,aAAkBL,aAAM,OAAe;IAEpE,IAAIM,oBAAoB,oBAAK,KAAoB,EAACN,aAAQ;QACxDM,oBAAoB,IAAK,qBAA4B;MACrD,eAAe,GAAC;MAChBZ,WAAK,yBAA+B,CAAC;MACtC;IACF;EAEO;qBACG,UAAa,CAAIS,WAAC;QACzB,IAAI,CAACD,aAAY,+BAAY;MAC9B;IACF;EACH;EA1EwC,0BA0EvC;AAOD;IAA6Cf,qDAAaM;EACxDd,6CAAkD;WAAlDQ,2BACS,OACR;IAFkB,YAAMM,MAAN,KAAqB;IAAUE;;IAEjD;EAGD;6BACyB,UAAU,WAAI,uBAA4B;IAClE;EACH;EAT6C,kCAS5C;AAOD;IAA6CY,qDAAad;EAGxDd,6CAAmD,QAAqB;WAAxE4B,2BACS,OACR;IAFmB,YAAMd,MAAN,KAAqB;IAAUE,YAAM,GAANa,MAAM;IAFjDb;;IAIP;EAES;6BACc,CAAEL,SAAC;IAC1B;EAES;6BACW;IACnB,IAAI,CAACmB,WAAO,EAAM;IACnB;EAES;6BACW;IACnB,IAAI,CAACA;IACN;EAEO;6BACI,UAAkB;QAC1B,KAAK,iBAAgB,EAAG;MACxB,IAAI,CAACC,gBAAc;MACnB,IAAI,CAACD,WAAO;MACb;IACF;EACH;EA5B6C,kCA4B5C","names":["tslib_1","Subscriber","Observable","OuterSubscriber","subscribeToResult","delayWhen","subscriptionDelay","source","SubscriptionDelayObservable","lift","DelayWhenOperator","prototype","call","DelayWhenSubscriber","_super","destination","_this","removeSubscription","innerSub","value","index","delayNotifier","err","completed","tryComplete","subscription","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","parent","unsubscribe","sourceSubscribed"],"sources":["../../../src/internal/operators/delayWhen.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}