{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function expand(project, concurrent, scheduler) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n  return function (source) {\n    return source.lift(new ExpandOperator(project, concurrent, scheduler));\n  };\n}\nvar ExpandOperator = /*@__PURE__*/function () {\n  function ExpandOperator(project, concurrent, scheduler) {\n    this.project = project;\n    this.concurrent = concurrent;\n    this.scheduler = scheduler;\n  }\n  ExpandOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  };\n  return ExpandOperator;\n}();\nexport { ExpandOperator };\nvar ExpandSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ExpandSubscriber, _super);\n  function ExpandSubscriber(destination, project, concurrent, scheduler) {\n    var _this = _super.call(this, destination) || this;\n    _this.project = project;\n    _this.concurrent = concurrent;\n    _this.scheduler = scheduler;\n    _this.index = 0;\n    _this.active = 0;\n    _this.hasCompleted = false;\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      _this.buffer = [];\n    }\n    return _this;\n  }\n  ExpandSubscriber.dispatch = function (arg) {\n    var subscriber = arg.subscriber,\n      result = arg.result,\n      value = arg.value,\n      index = arg.index;\n    subscriber.subscribeToProjection(result, value, index);\n  };\n  ExpandSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n    var index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      try {\n        var project = this.project;\n        var result = project(value, index);\n        if (!this.scheduler) {\n          this.subscribeToProjection(result, value, index);\n        } else {\n          var state = {\n            subscriber: this,\n            result: result,\n            value: value,\n            index: index\n          };\n          var destination_1 = this.destination;\n          destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n        }\n      } catch (e) {\n        destination.error(e);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  };\n  ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n    this.active++;\n    var destination = this.destination;\n    destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n  };\n  ExpandSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  };\n  ExpandSubscriber.prototype.notifyNext = function (innerValue) {\n    this._next(innerValue);\n  };\n  ExpandSubscriber.prototype.notifyComplete = function () {\n    var buffer = this.buffer;\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  };\n  return ExpandSubscriber;\n}(SimpleOuterSubscriber);\nexport { ExpandSubscriber };","map":{"version":3,"mappings":";AAKA,OAAO,KAAEA,oBAAuB;AA2DhC,SAAMC,qBAA+E,EACxDC,cACA,uBAAyB;OADzB,8CAA4B;EAEvD,cAAc,UAAU;IAExBC,UAAO,GAACC,MAAqB,kBAAY;EAC1C;EAEDD;EACE,yBAAoB;IAAA,OACAE,WACA,mBAAyB;EAAA;;kBADzB,gBAAU,YAAQ;WAClBC,sBAAyB;IAC5C;IAED;IACE,cAAc,YAAU;EAC1B;EACFA,wBAAC;IAAA;;EAcD;GAA4C;SAM1CA;oBAIE,gBAAM,gBAAY;SAHA,UAAO,iBAAiD;WACxDC,4BAAkB;IAClB,4BAAyB;IARrCC,aAAK,GAAaC;IAClBD,gBAAkB,GAACL;IACnBK,kBAAYE,SAAkB;IAQpCF,KAAI,SAAU;SACZ,OAAK,IAAM;SACZ;;MACFA;IAEc;IACN;;EAETD,gBAAC;IAES,+BAAV;MAAAI,SAAgBC,IAAUD;MAAAE;MAAAC;IACxBC,UAAM,sBAAmB,OAAY;;kBAG9B,UAAY;QACjBC,WAAO;QACRA;MAEK,KAAKC,SAAQ;MACf;;QAEFH,KAAI;YACM,2BAAiB;iBACnB,KAAM,CAAGD;UACf;YACEJ,OAAK;YACNE;aAAM;UACL,IAAM,sBAAyC,OAAM,OAAM,QAAE;eAE7D;UACD;YAAAI;YAAAJ;YAAAE;YAAAC;UAAA;UACF;UAASI,aAAE;QACV;OACD,CACF;QAAMF;MACL;KACD,MACF;MAEO;IACN;;kBAEY,UAAI,sBAA2B,qBAAsBH,KAAK,EAAEC,KAAC;IAC1E;IAES,kCAAS;IACjBE,WAAK,mBAAoB;;kBAElB,UAAY,UAAY;QAC9B;IACD,IAAI,IAAC,aAAc;MACpB;IAED;IACE,IAAI,CAACG,WAAM;EACb,CAAC;EAEDZ;IACE,IAAM,MAAM,WAAQ;;kBAEV,UAAW,eAAY;QAC/Ba,MAAK,OAAM,OAAO;QACnB;IACD,IAAIA,MAAK,WAAYC,MAAI,GAAK;MAC5B,IAAI,CAACC,YAAY,QAAS;;IAE7B;MACH,gBAAC;IA9E2C","names":["tslib_1","SimpleOuterSubscriber","innerSubscribe","concurrent","Number","source","ExpandOperator","ExpandSubscriber","_this","project","scheduler","result","arg","value","index","subscriber","destination","_complete","destination_1","unsubscribe","buffer","length","_next"],"sources":["../../../src/internal/operators/expand.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}