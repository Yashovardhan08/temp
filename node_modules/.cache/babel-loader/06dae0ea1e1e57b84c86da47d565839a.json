{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function onErrorResumeNext() {\n  var nextSources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nextSources[_i] = arguments[_i];\n  }\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = nextSources[0];\n  }\n  return function (source) {\n    return source.lift(new OnErrorResumeNextOperator(nextSources));\n  };\n}\nexport function onErrorResumeNextStatic() {\n  var nextSources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nextSources[_i] = arguments[_i];\n  }\n  var source = undefined;\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = nextSources[0];\n  }\n  source = nextSources.shift();\n  return from(source).lift(new OnErrorResumeNextOperator(nextSources));\n}\nvar OnErrorResumeNextOperator = /*@__PURE__*/function () {\n  function OnErrorResumeNextOperator(nextSources) {\n    this.nextSources = nextSources;\n  }\n  OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  };\n  return OnErrorResumeNextOperator;\n}();\nvar OnErrorResumeNextSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(OnErrorResumeNextSubscriber, _super);\n  function OnErrorResumeNextSubscriber(destination, nextSources) {\n    var _this = _super.call(this, destination) || this;\n    _this.destination = destination;\n    _this.nextSources = nextSources;\n    return _this;\n  }\n  OnErrorResumeNextSubscriber.prototype.notifyError = function () {\n    this.subscribeToNextSource();\n  };\n  OnErrorResumeNextSubscriber.prototype.notifyComplete = function () {\n    this.subscribeToNextSource();\n  };\n  OnErrorResumeNextSubscriber.prototype._error = function (err) {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  };\n  OnErrorResumeNextSubscriber.prototype._complete = function () {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  };\n  OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n    var next = this.nextSources.shift();\n    if (!!next) {\n      var innerSubscriber = new SimpleInnerSubscriber(this);\n      var destination = this.destination;\n      destination.add(innerSubscriber);\n      var innerSubscription = innerSubscribe(next, innerSubscriber);\n      if (innerSubscription !== innerSubscriber) {\n        destination.add(innerSubscription);\n      }\n    } else {\n      this.destination.complete();\n    }\n  };\n  return OnErrorResumeNextSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":";AACA,OAAO,KAAEA,OAAM,MAAM;AAIrB,SAASC,YAAS,oBAAuB;AAEzC,SAASC,gCAAuB;AAmFhC,SAAMC,qBAAU,uBAAiB;OAAO,0BAC2C;iBAAA,GAD3C;OAAA,iCAC2C;;EACjF;MACEC,WAAW,OAA2B,UAAcF,OAAC;IACtDE;EAED;EACD;IAAA;EAAA;AAaD;OAA8C,gCAEb;iBAAA,GAFa;OAAA,iCAEb;;EAC/B;EAEA,IAAIC,kBAAkB;MACpBD,WAAW,OAAG,UAAwCF,OAAC;IACxDE;EAED;EAEAC,SAAOD,WAAa,MAAK;EAC1B;AAED;IACEE,yCAAoB,YAAwC;WAAxCA,yBAAW,CAA6BF;IAC3D;EAED;2BACgB,UAAc,4BAA4B,QAAU,EAAE;IACrE;EACH;EAPA,OAOCE;AAED;IAAgDC,qDAA2BC;EACzER,6CAAsB,QACF;WADpBO,2BAEQ,YAAY,aACnB;IAHqB,kBAAW,KAAX,kBAA0B;IAC5BE,iBAAW,GAAXC,WAAW;;IAE9B;EAED;6BACO,UAAwB;IAC9B;EAED;6BACO,UAAwB;IAC9B;EAES;6BACH,UAAwB;IAC7B,IAAI,CAACC,qBAAc;IACpB;EAES;6BACH,UAAwB;IAC7B,IAAI,CAACA,qBAAc;IACpB;EAEO;6BACY,UAAiB,sBAAG;IACtC,IAAIC,IAAE,GAAI,IAAE;QACV,MAAM;MACN,IAAMC,eAAc,GAAI,IAACC,qBAA4B;MACrD,eAAe,GAAC,gBAAiB;MACjCJ,WAAM,oBAAoB;MAI1B,IAAIK,iBAAiB,iBAAK,KAAiB;UACzCA,iBAAgB,oBAAmB;QACpCL;MACF;WACC;MACD;IACF;EACH;EAzCgD,kCAyC/C","names":["tslib_1","from","isArray","SimpleOuterSubscriber","nextSources","source","OnErrorResumeNextOperator","OnErrorResumeNextSubscriber","_super","_this","destination","subscribeToNextSource","next","innerSubscriber","SimpleInnerSubscriber","innerSubscription"],"sources":["../../../src/internal/operators/onErrorResumeNext.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}